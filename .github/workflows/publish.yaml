name: Publish to Nuget
on:
  push:
    branches:
      - master
      - additional-runtime-os
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  build-dependencies:
    name: Build Dependencies
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "7.0.x"

      - name: Cache Rust Bindings
        id: cache-rust-bindings
        uses: actions/cache@v2
        with:
          path: |
            rust-bindings/target/release/libcsharp_bindings.*
            rust-bindings/csharp-bindings/bindings/Libsql.g.cs
          key: rust-bindings-${{ hashFiles('./generate-bindings.sh') }}
          restore-keys: |
            rust-bindings-

      - name: Generate bindings
        if: steps.cache-rust-bindings.outputs.cache-hit != 'true'
        run: ./generate-bindings.sh

      - name: Upload dynamic libraries
        uses: actions/upload-artifact@v2
        with:
          name: bindings
          path: |
            rust-bindings/target/release/libcsharp_bindings.*
            rust-bindings/csharp-bindings/bindings/Libsql.g.cs
          if-no-files-found: error

  publish:
    name: Build, Pack & Publish
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-dependencies
    steps:
      - uses: actions/checkout@v2

      - name: Assert tag matches project version
        run: |
          version=$(grep -Po '(?<=<PackageVersion>)[^<]+' Libsql.Client/Libsql.Client.csproj)
          if [ ${GITHUB_REF_NAME} != "v$version" ]; then
            echo "Tag '$tag' does not match project version '$version'"
            exit 1
          fi

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "7.0.x"

      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: bindings
          path: rust-bindings

      - name: Publish
        id: publish-nuget
        uses: alirezanet/publish-nuget@v3.1.0
        with:
          PROJECT_FILE_PATH: Libsql.Client/Libsql.Client.csproj
          VERSION_REGEX: ^\s*<PackageVersion>(.*)<\/PackageVersion>\s*$
          TAG_COMMIT: false
          TAG_FORMAT: "v*"
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
